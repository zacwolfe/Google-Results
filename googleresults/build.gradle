apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'zw-google-results'

    publishedGroupId = 'zacwolfe.thunderhead.googleresults'
    libraryName = 'Google Results'
    artifact = 'zacwolfe.thunderhead.googleresultslibrary'

    libraryDescription = 'A RecyclerView-derived widget that displays a list of Google search results'

    siteUrl = 'https://github.com/zacwolfe/Google-Results.git'
    gitUrl = 'https://github.com/zacwolfe/Google-Results.git'

    libraryVersion = '1.0.0'

    developerId = 'zacwolfe'
    developerName = 'Zac Wolfe'
    developerEmail = 'zac.wolfe@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

version = libraryVersion

android {
    compileSdkVersion 28

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.google.apis:google-api-services-customsearch:v1-rev74-1.25.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
}


if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
